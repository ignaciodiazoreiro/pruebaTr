@model IEnumerable<Proyecto_TruequesUCR.Models.Ofertas>

@{
    ViewBag.Title = "IndexOfertas";
}

<!-- Actividad supervisada 09 de junio
    Josué Amador e Ignacio Arroyo en Pair Programming
    Historia de usuario PIG-01-125
    Tareas técnicas:    Creación de tabla en base de datos (llaves foráneas relacionadas)
                        Creación de vistas
                        Creación de controladores
                        Dar funcionalidad a esas vistas.
-->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Trueques &#64 UCR</title>
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/bootstrap.css">
    <link rel="stylesheet" href="~/Content/General.css">
    <link rel="stylesheet" type="text/css" href="~/Content/About.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body data-spy="scroll" data-target=".fixed-top" data-offset="60">

    <nav aria-label="breadcrumb" id="breadcrumb-1">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="~/Home/Index">
                    <img src="~/Content/Images/home.png" width="25" height="25" />
                </a>
            </li>
            <li class="breadcrumb-item">Mis ofertas</</li>
        </ol>
    </nav>

    <div class="container text-center" id="titleMisOfertas" style="padding-top: 30px">
        <h2>
            <strong>Mis ofertas</strong>
        </h2>
    </div>

    <div class="container text-center" id="select">
        <div class="row" style="padding-top: 30px">
            <div class="col-lg-12">
                <div class="wrapper" id="trueques_to_select" style="overflow-y: scroll; position:relative; height:500px;">

                    @foreach (var oferta in Model)
                    {
                        var usuario = User.Identity.Name;
                        var trueque = oferta.Trueques;
                        var tipo = trueque.Tipo;
                        int idActual = oferta.Id;

                        if (oferta.OfertaDC != null)
                        {
                            if (tipo != "Subasta" && trueque.Estado != "Expirado" && trueque.Estado != "Cancelado") // si el trueque es directo o circular
                            {
                                var items = oferta.OfertaDC.Item;
                                if (items.Count() != 0 && items.First().Email_Comerciante == usuario)
                                {

                                    string NombreOferta = "Oferta a " + tipo.ToLower() + " de ";
                                    string NombreComerciante = trueque.Item.First().Comerciante.Nombre + " " + trueque.Item.First().Comerciante.Apellido;
                                    string NombresItems = "";
                                    string NombreCreacion = ((DateTime)oferta.FechaCreacion).ToString("dd'/'MM'/'yyyy");
                                    int ocurrencia = (oferta.OfertaDC.Item.Count() >= 3) ? 3 : oferta.OfertaDC.Item.Count();

                                    <div class="itemGroup" id=trueques.ID style="padding-bottom: 2px; padding-right: 20px">
                                        <!--<input id="@("check" + idActual)" name="opcion" type="button" onclick="location.href='@Url.Action("DetalleOferta", "Ofertas", new { id = idActual })'" value="@(idActual)" />-->
                                        <input id="@("check" + idActual)" name="opcion" type="button" value="@(idActual)" />
                                        <label for="@("check" + idActual)">

                                            @switch (ocurrencia)
                                            {
                                                case 1:

                                                    byte[] foto = null;

                                                    if (oferta.OfertaDC.Item.First().Fotos.Count() != 0)
                                                    {
                                                        foto = oferta.OfertaDC.Item.First().Fotos.First().Foto;
                                                    }

                                                    if (foto != null)
                                                    {
                                                        String img64 = Convert.ToBase64String(foto);
                                                        String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                        <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                    }
                                                    else
                                                    {
                                                        <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                    }

                                                    NombresItems = "[" + oferta.OfertaDC.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.OfertaDC.Item.First().Titulo;
                                                    break;

                                                case 2:
                                                    <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                    NombresItems = "[" + oferta.OfertaDC.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.OfertaDC.Item.ElementAt(0).Titulo + " y " + "[" + oferta.OfertaDC.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.OfertaDC.Item.ElementAt(1).Titulo;
                                                    break;

                                                case 3:

                                                    <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                    NombresItems = "[" + oferta.OfertaDC.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.OfertaDC.Item.ElementAt(0).Titulo + ", " + "[" + oferta.OfertaDC.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.OfertaDC.Item.ElementAt(1).Titulo + ", entre otros.";
                                                    break;
                                            }

                                            @NombreOferta<strong>@NombreComerciante</strong>, que incluye <strong>@NombresItems</strong> &nbsp;&nbsp;&nbsp;&nbsp; @NombreCreacion

                                            @Html.ActionLink("Editar", "EditarOfertaDirectoCircular", "Ofertas", new { id = idActual }, new { id = "right" })
                                            <a href="#@("eliminar" + idActual)" id="right" data-toggle="modal" data-target="#@("eliminar" + idActual)">Eliminar</a>
                                            @Html.ActionLink("Detalles", "DetalleOferta", "Ofertas", new { id = idActual }, new { id = "rightDetalle" })

                                        </label>
                                    </div>
                                }
                            }
                        }
                        else if (trueque.Estado != "Expirado" && trueque.Estado != "Cancelado")// si el trueque es subasta
                        {
                            if (oferta.OfertaSubasta != null)
                            {
                                if (oferta.OfertaSubasta.Comerciante.Email == usuario)
                                {
                                    string NombreOferta = "Oferta a subasta de ";
                                    string NombreComerciante = trueque.Item.First().Comerciante.Nombre + " " + trueque.Item.First().Comerciante.Apellido;
                                    string NombreCreacion = ((DateTime)oferta.FechaCreacion).ToString("dd'/'MM'/'yyyy");
                                    string Monto = oferta.OfertaSubasta.TipoMoneda + " " + oferta.OfertaSubasta.Monto.ToString("F");

                                    <div class="itemGroup" id=trueques.ID style="padding-bottom: 2px; padding-right: 20px">
                                        <input id="@("check"+idActual)" name="opcion" type="button" value="@(idActual)" />
                                        <label for="@("check"+idActual)">
                                            <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                            @NombreOferta<strong>@NombreComerciante</strong>, por un monto de <strong>@Monto</strong> &nbsp;&nbsp;&nbsp;&nbsp; @NombreCreacion

                                            @Html.ActionLink("Editar", "EditarOfertaSubasta", "Ofertas", new { id = idActual }, new { id = "right" })
                                            <a href="#@("eliminar"+idActual)" id="right" data-toggle="modal" data-target="#@("eliminar"+idActual)">Eliminar</a>
                                            @Html.ActionLink("Detalles", "DetalleOferta", "Ofertas", new { id = idActual }, new { id = "rightDetalle" })
                                        </label>
                                    </div>
                                }

                            }

                        }

                        <div class="modal fade" id="@("eliminar"+idActual)" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLongTitle"></h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        ¿Está seguro que desea eliminar la oferta de forma permanente? Si hace esto, se le notificará al truequeador.
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                        <input id="@("eliminar"+idActual)" type="submit" value="Eliminar" class="btn btn-primary" onclick="EliminarOFerta(@idActual)" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteSuccess" tabindex="-1" role="dialog" data-keyboard="false" data-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><strong>¡Su oferta ha sido eliminada!</strong></h5>
                </div>
                <div class="modal-body">
                    <p>
                        Su oferta ya no existe ni es visible para ningún usuario.
                    </p>
                </div>
                <div class="modal-footer">
                    @Html.ActionLink("Aceptar", "IndexOfertas", "Ofertas", null, new { @class = "btn btn-success" })
                </div>
            </div>
        </div>
    </div>

    <script src="~/Scripts/Ofertas.js"></script>

</body>
</html>
