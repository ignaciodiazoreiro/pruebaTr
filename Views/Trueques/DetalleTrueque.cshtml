@model IEnumerable<Proyecto_TruequesUCR.Models.Item>

@{
    ViewBag.Title = "DetalleTrueque";
}

<!--
    Actividad supervisada #4
    Ignacio Arroyo Montoya
    Fecha: 26-05-2020
    Backlog Id por implementar: TT-AT12
    Se va a realizar una implmentación de la historia antes mencionada con respecto a las tareeas tecnicas
    que se lleguen a acordar con el PO y los Stakeholders. En esta historia, en grandres razgos, se implementa
    la funcionalidad de mostrar los items que se encuentran en cada uno de los trueques.

-->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Trueques &#64 UCR</title>
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/bootstrap.css">
    <link rel="stylesheet" href="~/Content/General.css">
    <link rel="stylesheet" type="text/css" href="~/Content/About.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body data-spy="scroll" data-target=".fixed-top" data-offset="60">

    @{
        ICollection<Proyecto_TruequesUCR.Models.Ofertas> ofertas = null;
        string TipoTrueque = "";
        string NombreCompleto = "";
        string DetallesTrueque = "";
        string FechaInicio = "";
        string FechaFinal = "";
        decimal MontoMinimo = 0;
        string TipoMoneda = "";
        string simbolo = "";
        string FechaCreacion = "";
        string EstadoTrueque = "";
        string EmailCreador = "";
        Proyecto_TruequesUCR.Models.Ofertas miOfertaCircular = null;
        var usuario = User.Identity.Name;
        Proyecto_TruequesUCR.Models.Trueques trueque = null;
        bool enProgreso = false;

        foreach (var item in Model)
        {
            if (item.Trueques != null)
            {
                // Se verifica si el id del item actual coresponde al mismo que se pasó
                // en los parametros al momento de que se llamo a esta vista
                if (ViewBag.IdDelTrueque == item.Trueques.IdTrueque)
                {
                    trueque = item.Trueques;
                    if (trueque.Ofertas1 != null && trueque.Tipo == "Subasta")
                    {
                        enProgreso = trueque.Estado == "Finalizado" && (usuario == trueque.Item.FirstOrDefault().Email_Comerciante || usuario == trueque.Ofertas1.OfertaSubasta.EmailCommerciante);
                    }
                    else if (trueque.Ofertas1 != null)
                    {
                        enProgreso = trueque.Estado == "Finalizado" && (usuario == trueque.Item.FirstOrDefault().Email_Comerciante || usuario == trueque.Ofertas1.OfertaDC.Item.FirstOrDefault().Email_Comerciante);
                    }
                    EmailCreador = item.Email_Comerciante;
                    NombreCompleto = item.Comerciante.Nombre + " " + item.Comerciante.Apellido;
                    ofertas = item.Trueques.Ofertas;

                    if (item.Trueques.Tipo == "Directo")
                    {
                        TipoTrueque = "Trueque directo";
                    }
                    else if (item.Trueques.Tipo == "Circular")
                    {
                        TipoTrueque = "Trueque circular";
                    }
                    else if (item.Trueques.Tipo == "Subasta")
                    {
                        TipoTrueque = "Subasta";
                        MontoMinimo = (decimal)item.Trueques.Subasta.Monto;
                        MontoMinimo = decimal.Parse(MontoMinimo.ToString("F"));
                        TipoMoneda = item.Trueques.Subasta.TipoMoneda;
                        switch (TipoMoneda)
                        {
                            case "CRC":
                                simbolo = "¢";
                                break;
                            case "USD":
                                simbolo = "$";
                                break;
                            case "EUR":
                                simbolo = "€";
                                break;
                        }
                    }

                    EstadoTrueque = item.Trueques.Estado;

                    DateTime fechaI = (DateTime)item.Trueques.FechaInicio;
                    DateTime fechaF = (DateTime)item.Trueques.FechaFinal;
                    DateTime fechaC = (DateTime)item.Trueques.FechaCreacion;

                    FechaInicio = fechaI.ToString("dd'/'MM'/'yyyy");
                    FechaFinal = fechaF.ToString("dd'/'MM'/'yyyy");
                    FechaCreacion = fechaC.ToString("dd'/'MM'/'yyyy");

                    DetallesTrueque = item.Trueques.Descripcion;

                    break;
                }
            }
        }

        <nav aria-label="breadcrumb" id="breadcrumb-1">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="~/Home/Index">
                        <img src="~/Content/Images/home.png" width="25" height="25" />
                    </a>
                </li>
                @if (usuario == EmailCreador)
                {
                    if (ViewBag.Predecesor == "activos")
                    {
                        <li class="breadcrumb-item"><a href="/Trueques/IndexTruequesActivos">Mis trueques activos</a></li>
                    }
                    else if (ViewBag.Predecesor == "expirados")
                    {
                        <li class="breadcrumb-item"><a href="/Trueques/IndexTruequesExpirados">Mis trueques expirados</a></li>
                    }
                }
                else
                {
                    if (ViewBag.Predecesor == "item")
                    {
                        <li class="breadcrumb-item">Detalles del ítem</li>
                    }
                    else if (ViewBag.Predecesor == "oferta")
                    {
                        <li class="breadcrumb-item"><a href="/Ofertas/IndexOfertas">Mis ofertas</a></li>
                        <li class="breadcrumb-item"><a href=@Url.Action("DetalleOferta", "Ofertas", new { id = ViewBag.IdPredecesor, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdDelTrueque })>Detalles de la oferta</a></li>
                    }
                }
                <li class="breadcrumb-item">Detalles del trueque</li>
            </ol>
        </nav>

        <input type="hidden" id="tipoTrueque" value="@(TipoTrueque)">
        <div class="container text-center" id="select">

            <div class="row" style="padding-top: 30px" align="center">
                <div class="col-md">

                    <h2 style="padding-bottom: 30px">
                        @if (enProgreso)
                        {
                            <strong>Trueque en progreso</strong>
                        }
                        else
                        {
                            <strong>Detalles del trueque</strong>
                        }
                    </h2>

                    <p align="center">
                        @if (enProgreso)
                        {
                            @:¡Esperamos que disfrutés tus nuevos artículos! Recordá hacer el envío por los medios acordados, para evitar una mala calificación.
                            <br />
                            <br />
                        }
                        <strong>@TipoTrueque</strong> <br />
                        por <strong>@NombreCompleto</strong> <br />
                        @DetallesTrueque
                    </p>

                </div>
            </div>

            <div class="row" style="padding-top: 15px" align="center">

                <div class="col-lg" align="left">
                    @if (!enProgreso)
                    {
                        <strong>Estado del trueque: </strong>@EstadoTrueque
                        <br />
                        <strong>Fecha de creación: </strong>@FechaCreacion
                        <br />
                        <strong>Fecha de inicio: </strong>@FechaInicio
                        <br />
                        <strong>Fecha final: </strong> @FechaFinal

                        if (TipoTrueque == "Subasta")
                        {
                            <br />
                            <strong>Monto mínimo: </strong> @TipoMoneda@:&nbsp;@simbolo&nbsp;@MontoMinimo
                        }
                    }
                </div>

                <div class="col-lg" align="right">
                    <br />
                    <br />
                    <br />
                    @if (usuario == EmailCreador)
                    {
                        @:<p align="center"> <strong>Ofertas</strong> </p>
                    }
                </div>

            </div>

            <div class="row" style="padding-top: 15px; padding-bottom:30px" align="center">

                @if (Request.IsAuthenticated && usuario == EmailCreador) // si el usuario loggeado es el dueño del trueque
                {
                    <div class="col-lg" align="left">
                        <div class="border container form-horizontal" style="padding-top: 10px; border-color: black">

                            <p align="left">
                                Este trueque incluye los siguientes ítems:
                            </p>

                            <div class="wrapper" style="overflow-y: scroll; height: 250px">
                                @foreach (var item in Model)
                                {
                                    if (item.Trueques != null)
                                    {
                                        // Se verifica si el id del item actual coresponde al mismo que se pasó
                                        // en los parametros al momento de que se llamo a esta vista
                                        if (ViewBag.IdDelTrueque == item.Trueques.IdTrueque)
                                        {
                                            <div class="itemGroup" id=item.ID style="padding-bottom: 2px; padding-right: 20px">
                                                <label for="@("check"+item.Id_Item)">
                                                    @{
                                                        byte[] foto = null;

                                                        if (item.Fotos != null)
                                                        {
                                                            foreach (var i in item.Fotos)
                                                            {
                                                                if (i.Foto != null)
                                                                {
                                                                    foto = i.Foto;
                                                                    break;
                                                                }
                                                            }
                                                        }

                                                        if (foto != null)
                                                        {
                                                            String img64 = Convert.ToBase64String(foto);
                                                            String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                            <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                        }
                                                        else
                                                        {
                                                            <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                        }
                                                    }
                                                    [@Html.DisplayFor(modelItem => item.Nombre_Categoria_Item)] @Html.DisplayFor(modelItem => item.Titulo)
                                                </label>
                                            </div>
                                        }
                                    }
                                }
                            </div>

                        </div>
                    </div>

                    <div class="col-lg" align="right">
                        <div class="border container form-horizontal" style="padding-top: 10px; border-color: black">

                            <p align="left">
                                A este trueque le han propuesto las siguientes ofertas:
                            </p>

                            <div class="wrapper" style="overflow-y: scroll; height: 250px" align="center">
                                @if (TipoTrueque != "Subasta") // si es un trueque directo o circular
                                {
                                    foreach (var oferta in ofertas)
                                    {
                                        var items = oferta.OfertaDC.Item;
                                        if (items.Count != 0)
                                        {
                                            string NombreOferta = "Oferta por ";
                                            string NombreComerciante = items.First().Comerciante.Nombre + " " + items.First().Comerciante.Apellido;
                                            //string NombresItems = "";
                                            //string NombreCreacion = ((DateTime)oferta.FechaCreacion).ToString("dd'/'MM'/'yyyy");

                                            int ocurrencia = (items.Count() >= 3) ? 3 : items.Count();
                                            int idActual = oferta.Id;

                                            <div class="itemGroup" id=trueques.ID style="padding-bottom: 2px; padding-right: 20px">
                                                <!--<input id="@("check"+idActual)" name="opcion" type="button" onclick="location.href='@Url.Action("DetalleOferta", "Ofertas", new { id = idActual })'" value="@(idActual)" />-->
                                                <input id="@("check"+idActual)" name="opcion" type="button" value="@(idActual)" />
                                                <label for="@("check"+idActual)">

                                                    @switch (ocurrencia)
                                                    {
                                                        case 1:

                                                            byte[] foto = null;

                                                            if (items.First().Fotos.Count() != 0)
                                                            {
                                                                foto = items.First().Fotos.First().Foto;
                                                            }

                                                            if (foto != null)
                                                            {
                                                                String img64 = Convert.ToBase64String(foto);
                                                                String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                                <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                            }

                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.First().Titulo;
                                                            break;

                                                        case 2:
                                                            <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(0).Titulo + " y " + "[" + oferta.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(1).Titulo;
                                                            break;

                                                        case 3:

                                                            <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(0).Titulo + ", " + "[" + oferta.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(1).Titulo + ", entre otros.";
                                                            break;
                                                    }

                                                    @NombreOferta<strong>@NombreComerciante</strong><!--, que incluye <strong>NombresItems</strong> &nbsp;&nbsp;&nbsp;&nbsp; NombreCreacion-->

                                                    @Html.ActionLink("Detalles", "DetalleOferta", "Ofertas", new { id = idActual, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdPredecesor }, new { id = "right" })

                                                </label>
                                            </div>
                                        }
                                    }
                                }
                                else // si es una subasta
                                {
                                    foreach (var oferta in ofertas)
                                    {
                                        string NombreOferta = "Oferta por ";
                                        string NombreComerciante = oferta.OfertaSubasta.Comerciante.Nombre + " " + oferta.OfertaSubasta.Comerciante.Apellido;
                                        //string NombreCreacion = ((DateTime)oferta.FechaCreacion).ToString("dd'/'MM'/'yyyy");
                                        int idActual = oferta.Id;

                                        <div class="itemGroup" id=trueques.ID style="padding-bottom: 2px; padding-right: 20px">
                                            <!--<input id="@("check"+idActual)" name="opcion" type="button" onclick="location.href='@Url.Action("DetalleOferta", "Ofertas", new { id = idActual })'" value="@(idActual)" />-->
                                            <input id="@("check"+idActual)" name="opcion" type="button" value="@(idActual)" />
                                            <label for="@("check"+idActual)">
                                                <img src="~/Content/Images/Subasta.png" width="35" height="35" class="align-self-center" />
                                                @NombreOferta<strong>@NombreComerciante</strong><!--, que incluye <strong>NombresItems</strong> &nbsp;&nbsp;&nbsp;&nbsp; NombreCreacion-->
                                                @Html.ActionLink("Detalles", "DetalleOferta", "Ofertas", new { id = idActual, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdPredecesor }, new { id = "right" })
                                            </label>
                                        </div>
                                    }
                                }

                                @if (ofertas.Count() == 0)
                                {
                                    <br>
                                    <br>
                                    <br>
                                    <br>
                                    <strong>Este trueque aún no cuenta con ofertas.</strong>
                                }
                            </div>
                        </div>
                    </div>
                }
                else // si el usuario loggeado es un posible ofertador del trueque
                {
                    if (TipoTrueque != "Trueque circular") // si es un trueque directo o subasta
                    {
                        <div class="col-md">

                            <p align="left">
                                Este trueque incluye los siguientes ítems:
                            </p>

                            <div class="wrapper" style="overflow-y: scroll; height: 250px">
                                @foreach (var item in Model)
                                {
                                    if (item.Trueques != null)
                                    {
                                        // Se verifica si el id del item actual coresponde al mismo que se pasó
                                        // en los parametros al momento de que se llamo a esta vista
                                        if (ViewBag.IdDelTrueque == item.Trueques.IdTrueque)
                                        {
                                            <div class="itemGroup" id=item.ID style="padding-bottom: 2px; padding-right: 20px">
                                                <label for="@(" check"+item.Id_Item)">
                                                    @{
                                                        byte[] foto = null;

                                                        if (item.Fotos != null)
                                                        {
                                                            foreach (var i in item.Fotos)
                                                            {
                                                                if (i.Foto != null)
                                                                {
                                                                    foto = i.Foto;
                                                                    break;
                                                                }
                                                            }
                                                        }

                                                        if (foto != null)
                                                        {
                                                            String img64 = Convert.ToBase64String(foto);
                                                            String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                            <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                        }
                                                        else
                                                        {
                                                            <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                        }
                                                    }
                                                    [@Html.DisplayFor(modelItem => item.Nombre_Categoria_Item)] @Html.DisplayFor(modelItem => item.Titulo)
                                                </label>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                    else // si es un trueque circular
                    {
                        <div class="col-lg" align="left">
                            <div class="border container form-horizontal" style="padding-top: 10px; border-color: black">

                                <p align="left">
                                    Este trueque incluye los siguientes ítems:
                                </p>

                                <div class="wrapper" style="overflow-y: scroll; height: 250px">
                                    @foreach (var item in Model)
                                    {
                                        if (item.Trueques != null)
                                        {
                                            // Se verifica si el id del item actual coresponde al mismo que se pasó
                                            // en los parametros al momento de que se llamo a esta vista
                                            if (ViewBag.IdDelTrueque == item.Trueques.IdTrueque)
                                            {
                                                <div class="itemGroup" id=item.ID style="padding-bottom: 2px; padding-right: 20px">
                                                    <label for="@("check"+item.Id_Item)">
                                                        @{
                                                            byte[] foto = null;

                                                            if (item.Fotos != null)
                                                            {
                                                                foreach (var i in item.Fotos)
                                                                {
                                                                    if (i.Foto != null)
                                                                    {
                                                                        foto = i.Foto;
                                                                        break;
                                                                    }
                                                                }
                                                            }

                                                            if (foto != null)
                                                            {
                                                                String img64 = Convert.ToBase64String(foto);
                                                                String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                                <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                            }
                                                        }
                                                        [@Html.DisplayFor(modelItem => item.Nombre_Categoria_Item)] @Html.DisplayFor(modelItem => item.Titulo)
                                                    </label>
                                                </div>
                                            }
                                        }
                                    }
                                </div>

                            </div>
                        </div>

                        <div class="col-lg" align="right">
                            <div class="border container form-horizontal" style="padding-top: 10px; border-color: black">

                                <p align="left">
                                    Otros usuarios han propuesto las siguientes ofertas:
                                </p>

                                <div class="wrapper" style="overflow-y: scroll; height: 250px" align="center">

                                    @foreach (var oferta in ofertas)
                                    {
                                        var items = oferta.OfertaDC.Item;
                                        if (items.Count != 0)
                                        {
                                            bool esMiOferta = items.First().Email_Comerciante == usuario;
                                            string NombreOferta = "Oferta por ";
                                            string NombreComerciante = items.First().Comerciante.Nombre + " " + items.First().Comerciante.Apellido;
                                            if (esMiOferta)
                                            {
                                                NombreComerciante += " (mi oferta)";
                                                miOfertaCircular = oferta;
                                            }
                                            //string NombresItems = "";
                                            //string NombreCreacion = ((DateTime)oferta.FechaCreacion).ToString("dd'/'MM'/'yyyy");

                                            int ocurrencia = (items.Count() >= 3) ? 3 : items.Count();
                                            int idActual = oferta.Id;

                                            <div class="itemGroup" id=trueques.ID style="padding-bottom: 2px; padding-right: 20px">
                                                <!--<input id="@("check"+idActual)" name="opcion" type="button" onclick="location.href='@Url.Action("DetalleOferta", "Ofertas", new { id = idActual })'" value="@(idActual)" />-->
                                                <input id="@("check"+idActual)" name="opcion" type="button" value="@(idActual)" />
                                                <label for="@("check"+idActual)">

                                                    @switch (ocurrencia)
                                                    {
                                                        case 1:

                                                            byte[] foto = null;

                                                            if (items.First().Fotos.Count() != 0)
                                                            {
                                                                foto = items.First().Fotos.First().Foto;
                                                            }

                                                            if (foto != null)
                                                            {
                                                                String img64 = Convert.ToBase64String(foto);
                                                                String img64Url = string.Format("data:image/" + "jepg" + ";base64,{0}", img64);
                                                                <img src="@img64Url" width="35" height="35" class="align-self-center" />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/Images/fotoPredeterminada.png" width="35" height="35" class="align-self-center" />
                                                            }

                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.First().Titulo;
                                                            break;

                                                        case 2:
                                                            <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(0).Titulo + " y " + "[" + oferta.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(1).Titulo;
                                                            break;

                                                        case 3:

                                                            <img src="~/Content/Images/trueque_default.png" width="35" height="35" class="align-self-center" />
                                                            //NombresItems = "[" + oferta.Item.First().Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(0).Titulo + ", " + "[" + oferta.Item.ElementAt(1).Nombre_Categoria_Item + "]" + " " + oferta.Item.ElementAt(1).Titulo + ", entre otros.";
                                                            break;
                                                    }

                                                    @NombreOferta<strong>@NombreComerciante</strong><!--, que incluye <strong>NombresItems</strong> &nbsp;&nbsp;&nbsp;&nbsp; NombreCreacion-->

                                                    @Html.ActionLink("Detalles", "DetalleOferta", "Ofertas", new { id = idActual, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdPredecesor }, new { id = "right" })

                                                </label>
                                            </div>
                                        }
                                    }

                                    @if (ofertas.Count() == 0)
                                    {
                                        <br>
                                        <br>
                                        <br>
                                        <br>
                                        <strong>Este trueque aún no cuenta con ofertas.</strong>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>

            <div class="row" style="padding-top: 20px">
                <div class="col-lg-12">
                    <div class="button">
                        @if (!enProgreso && usuario == EmailCreador)
                        {
                            <div class="col-sm">
                                @if (ViewBag.YaOferto)
                                {
                                    bool aceptado = trueque.IdOfertaAceptada != null;
                                    bool negociado = (trueque.MetodoDigital != null && trueque.DetalleDigital != null) || (trueque.MetodoFisico != null && trueque.DetalleFisico != null);
                                    if (aceptado && negociado)
                                    {
                                        @Html.ActionLink("Ver propuesta de envío", "DetalleEnvio", "Ofertas", new { IdTrueque = trueque.IdTrueque, Predecesor = ViewBag.Predecesor, IdPredecesor = ViewBag.IdDelTrueque, AceptoTrueque = true }, new { @class = "btn btn-primary" })
                                    }
                                    else if (aceptado)
                                    {
                                        @Html.ActionLink("Enviar propuesta de envío (pendiente)", "EditarEnvio", "Ofertas", new { IdTrueque = trueque.IdTrueque, Predecesor = ViewBag.Predecesor, IdPredecesor = ViewBag.IdDelTrueque, AceptoTrueque = true }, new { @id = "confirmarTrueque", @class = "btn btn-primary", onclick = "getDatos()" })
                                    }
                                }

                                @if (ViewBag.Predecesor == "activos")
                                {
                                    @Html.ActionLink("Atrás", "IndexTruequesActivos", "Trueques", null, new { @class = "btn btn-secondary" })
                                }
                                else if (ViewBag.Predecesor == "expirados")
                                {
                                    @Html.ActionLink("Atrás", "IndexTruequesExpirados", "Trueques", null, new { @class = "btn btn-secondary" })
                                }
                            </div>
                        }
                        else if (!enProgreso)
                        {
                            if (ViewBag.YaOferto && trueque.Tipo == "Circular")
                            {
                                <button type="button" class="btn btn-disabled">Ya ofertaste en este trueque circular</button>
                            }
                            else
                            {
                                if (trueque.Estado == "Activo")
                                {
                                    <button type="button" class="btn btn-primary" data-toggle="modal" onclick=Ofertar(@ViewBag.IdDelTrueque)>Ofertar</button>
                                }
                            }

                            if (ViewBag.YaOferto && trueque.Tipo == "Circular")
                            {
                                bool aceptadoPorMi = trueque.IdOfertaAceptada != null && trueque.IdOfertaAceptada == miOfertaCircular.Id;
                                bool aceptadoPorOtro = trueque.IdOfertaAceptada != null && trueque.IdOfertaAceptada != miOfertaCircular.Id;
                                bool ofertaActualYaAceptada = ofertaActualYaAceptada = ViewBag.YaOferto && miOfertaCircular.OfertaDC.IdOfertaAceptada != null && !aceptadoPorMi; ;
                                if (miOfertaCircular.OfertaDC.OfertaDC1.Count() > 0)
                                {
                                    ofertaActualYaAceptada = ofertaActualYaAceptada && (miOfertaCircular.OfertaDC.IdOfertaAceptada != null || miOfertaCircular.OfertaDC.OfertaDC1.FirstOrDefault().IdOfertaAceptada != null);
                                }
                                bool negociado = aceptadoPorMi && (trueque.MetodoDigital != null && trueque.DetalleDigital != null) || (trueque.MetodoFisico != null && trueque.DetalleFisico != null);
                                if (aceptadoPorMi && negociado)
                                {
                                    @Html.ActionLink("Ver propuesta de envío", "DetalleEnvio", "Ofertas", new { IdTrueque = trueque.IdTrueque, Predecesor = ViewBag.Predecesor, IdPredecesor = ViewBag.IdDelTrueque, AceptoTrueque = true }, new { @class = "btn btn-primary" })
                                }
                                else if (aceptadoPorMi)
                                {
                                    @Html.ActionLink("Enviar propuesta de envío (pendiente)", "EditarEnvio", "Ofertas", new { IdTrueque = trueque.IdTrueque, Predecesor = ViewBag.Predecesor, IdPredecesor = ViewBag.IdDelTrueque, AceptoTrueque = true }, new { @id = "confirmarTrueque", @class = "btn btn-primary", onclick = "getDatos()" })
                                }
                                else if (aceptadoPorOtro)
                                {
                                    @Html.ActionLink("El trueque ya ha sido aceptado por otro usuario", "EditarEnvio", "Ofertas", null, new { @class = "btn btn-disabled", @disabled = true })
                                }
                                else if (ofertaActualYaAceptada)
                                {
                                    @Html.ActionLink("Ya has aceptado una de las ofertas", "EditarEnvio", "Ofertas", null, new { @class = "btn btn-disabled", @disabled = true })
                                }
                                else
                                {
                                    @Html.ActionLink("Aceptar trueque", "AceptarOferta", "Ofertas", new { id = miOfertaCircular.Id, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdPredecesor, idOfertaSegunda = ViewBag.IdOfertaSegunda, invertir = true }, new { @class = "btn btn-primary" })
                                }
                            }

                            if (ViewBag.Predecesor == "item")
                            {
                                <button type="button" class="btn btn-primary" disabled>Atrás</button>
                            }
                            else if (ViewBag.Predecesor == "oferta")
                            {
                                @Html.ActionLink("Atrás", "DetalleOferta", "Ofertas", new { id = ViewBag.IdPredecesor, predecesor = ViewBag.Predecesor, idPredecesor = ViewBag.IdDelTrueque }, new { @class = "btn btn-secondary" })
                            }
                        }
                        else
                        {
                            <button type="button" class="btn btn-disabled">Calificar truequeador</button>
                        }
                    </div>
                </div>
            </div>

            <script src="~/Scripts/Ofertas.js"></script>
        </div>
    }

</body>
</html>